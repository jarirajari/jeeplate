# Apache Shiro Configuration: http://shiro.apache.org/configuration.html
#
# =============================== 
# Shiro INI configuration for EJB 
# =============================== 
#
# Remember to check default filters: http://shiro.apache.org/web.html#Web-DefaultFilters
# This configuration will be retrieved from the classpath and available as "iniRealm"!

# Build the SecurityManager with the configuration
[main]
#ssl.enabled = false

# No need to subclass the JdbcRealm when using JndiObjectFactory!
dataSource = org.apache.shiro.jndi.JndiObjectFactory   
dataSource.requiredType = javax.sql.DataSource   
dataSource.resourceName = java:jboss/datasources/PostgreDS

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = false
jdbcRealm.dataSource = $dataSource

jdbcRealm.authenticationQuery = SELECT password FROM system_users WHERE username = ?
jdbcRealm.userRolesQuery      = SELECT type FROM system_users WHERE id = (SELECT id FROM system_users WHERE username = ?)
jdbcRealm.permissionsQuery    = SELECT null LIMIT 0

securityManager.sessionManager.globalSessionTimeout = 3600000

# username = password, roleName1, roleName2, roleNameN
[users]
tortoise = shell, admin

# rolename = permission1, permission2, permissionN
[roles]
admin = swim, walk

# RESTful API URLs requires protection
[urls]
# /rest/restricted/initialize/
# /rest/api1/public = anon
# /rest/api1/aa = anon
/restricted.xhtml = authc

#Fix for "JSESSIONID" Wildfly issue
#sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#securityManager.sessionManager=$sessionManager
#securityManager.sessionManager.sessionIdCookieEnabled = true
#cookie = org.apache.shiro.web.servlet.SimpleCookie 
#cookie.name = here.pick.your.session.id
#sessionManager.sessionIdCookie = $cookie