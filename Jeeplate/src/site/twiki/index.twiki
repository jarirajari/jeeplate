---+ Jeeplate Java EE Enterprise Project (Maven multimodule)

Jeeplate documentation and notes in TWiki [[http://twiki.org/cgi-bin/view/TWiki04x01/TextFormattingRules][format]].

---++ General notes

Jeeplate is a Java EE Enterprise project that is basically a web application. 
It can be used as a template for a project where a business process of a small 
or medium size enterprise is modeled and captured as a software product.

---+++ Testing

* JUnit
* For starters, H2 in-memory datasource and Jetty

---+++ Logging

* jboss.logging because both Wildfly and Hibernate use it
* As @Produces produced resource

---+++ Database

* [[http://www.h2database.com/html/cheatSheet.html][H2]] database is used
* H2 [[http://www.h2database.com/html/features.html#comparison][features]]
* Since this is a template project the database is in-memory mode instead of 
  embedded mode or standard installation. However, *not* in _server_mode
* The test db should be accessible at http://localhost:8082/ (see util package)
* ORM will be used, see description
* Database should have _versioning_ scheme, and some version information should 
  be also available in the database!
* H2 does not need to be started when it is embedded. Server mode requires 
  starting, and it required when external database connections are used.

---+++ Object-Relational Model (ORM)
* Hibernate with H2. Remember ==persistence.xml==
* "non-jta" H2 datasource can be used for the time being and later ds configuration 
  should be moved to container (container should manage it in production)
* moving on to JPA 2.1 for persistence (incl. persistence xml)

---+++ Transactions

* With container managed datasource (jta vs. non-jta)

---+++ Caching

* To be added later

---+++ To be sorted
mvn -DdownloadSource=true -DdownloadJavadocs=true eclipse:eclipse

---+++ Steps
1. Project initialization. Documentation layout
2. Project structure and initial Maven configuration
3. JUnit with (in-memory) H2 test and Jetty test.
4. Example EJB test with Servlet. WAR and EJB within EAR deployed to an AS. 
   EAR requires ==application.xml== and WAR ==web.xml== and jboss-web.xml for 
   setting the context root: http://localhost:8080/jeeplate/
5. Tested with Java 8, Netbeans 8 and Wildfly 8.1.0.Final, works ok.
6. Original idea was to use slf4J logging, but since Hibernate is using jboss-
   logging and we are using Wildfly in development, we should use it too.
7. Configuring persistence in persistence.xml: moved from hibernate props to 
   use JPA 2.1 specific ones. Note, that usage of 'none' for hbm2ddl!
8. Basic setup seems to work, first phase complete.
 
---+++ Important!
* *Remember* to have ==beans.xml== in both EJB and WAR. Also, make sure it has:
  _bean-discovery-mode="all"_. Especially if you notice something like: 
  "WELD-001408 Unsatisfied dependencies for type [Logger] with qualifiers 
  [@Default] at injection point"!